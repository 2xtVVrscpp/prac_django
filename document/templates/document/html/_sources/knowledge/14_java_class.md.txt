# クラスの生成
先ほどクラスという設計図をもとにインスタンスという実物を作る
という話をしましたが，ここではクラスの作り方を紹介します．

## クラスの作り方
1. クラスに名前をつける

```
public class Hero{

}
```

この形は見たことがないですか？そうです．
今まで書いてきたコードでおまじないとしてきた物です．
これはクラスに名前をつける物だったのです．

2. フィールドの定義
オブジェクトには**行動責任**と**情報保持責任**という二つの責任がありました．
まず，情報保持責任を満たすように定義していきます．
では，どのように定義するのかを見ていきましょう．

```
public class Hero{
	String name;
	int hp;
	final int LEVEL = 10;  // finalをつけると定数として扱えます．
}
```

次に行動責任を満たすように定義していきます．
ここは今までメソッドとして書いてきた方法で定義できます．

```
public class Hero{
	String name;
	int hp;
	final int LEVEL = 10;  // finalをつけると定数として扱えます．
	
	public void sleep(){
		this.hp = 100;
		System.out.println(this.hp);
	}
}
```

thisとは？？，publicの後にstaticがないのですが．

まずthisとは**インスタンスのフィールド中の**という意味です．
今回の場合は，**インスタンスのフィールド中のname**のことを言っています．
無くさないといけない重大な理由がない限り，つけてください．
もしくはそのような重大な理由がある場合は，そもそも欠陥があるのでそっちを修正してください．

staticについては今回の場合なくていいのです．
理由は後でまた紹介します．

## クラスとメンバの命名ルール

``` eval_rst



```

## クラスによって新しく型を定義
型を定義って？型ってintとかStringですよね．

これらはJavaが標準で持っている型(入れ物)です．
それをクラスによって定義します．
そうすることで自由に入れ物を作ることができます．
先ほどの例で言うとString型のname，int型のhpを持つHeroという型(入れ物)を
作りました．

一つ追加で言うとString型も実はクラスによって定義されています．
そのため．String.length()とメソッドを使っていることからもクラスということがわかるかと思います．