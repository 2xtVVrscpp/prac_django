# 条件分岐、繰り返し処理

## 条件分岐：if
もし～ならという命令文です。プログラミングするうえで
必須になりますので覚えましょう。
この時条件文が( )の中に来ますが正確には**論理値が入る**ことに
気を付けてください。

### 注意点
- ※比較は「```==```」なので気を付けてください。
- ※文字列の比較は「```str.equals("比較したい文字列")```」
  - str：比較したい変数
- Stringの場合だけ比較のための動きが違う。比較対象の違い
  - ==：メモリの中が同じか(同じ場所か)
  - equals：内容が同じか

```
if(条件文){ }
else { }

(例)
int num1 = 10;
// num1が10であるなら
if(num1 == 10){
  処理1;
}
// num1が10でないなら
else {
  処理2;
}

String str = "aaa"
if(str.equals("aa")) { }

```


## 繰り返し処理：for / while
条件を満たす限り、繰り返して処理をおこなう。

```
for (初期値;条件文;繰り返し時処理){
  処理1;
}
while(条件文){
  処理2;
  (繰り返し次処理;)←これがないと無限ループに突入することがある。
}

```

### breakとcontibue
繰り返し処理を行う上である条件を満たしたら強制終了させたい。または何もしない
という場合に使います。

- break：ループ文の強制終了
- continue：処理のスキップ


## 変数が使える領域
変数が使える領域をスコープといいます。
スコープは一般的にはブロック内部であり、ブロックから出たら変数は自動的に削除されます。

```
while(){
  int num; //変数指定 -----


  //----ここまでがスコープ
}

System.out.println(num);
//スコープ外で変数:numは捨てられており、コンパイルエラー
```

## 条件文において
複数の条件を使って分岐を行う場合は、
```&&``` か ```||``` を使いましょう。
それぞれAND、ORのことです。
また、二つ重ねた書き方を**ショートサーキット**と呼びます。

